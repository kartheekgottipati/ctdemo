openapi: 3.0.3
info:
  title: Coin Tracker demo APP
  version: 1.0.0
  description: API backend to sync BTC wallet transactions to datastore
paths:
  /addresses/:
    get:
      operationId: addresses_list
      description: List all addresses
      tags:
      - addresses
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address'
          description: ''
    post:
      operationId: addresses_create
      description: Add new address
      tags:
      - addresses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Address'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Address'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
  /addresses/{address}/:
    get:
      operationId: addresses_retrieve
      description: Retrieve a single address
      parameters:
      - in: path
        name: address
        schema:
          type: string
        required: true
      tags:
      - addresses
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
    put:
      operationId: addresses_update
      description: Update an address information
      parameters:
      - in: path
        name: address
        schema:
          type: string
        required: true
      tags:
      - addresses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Address'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Address'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
    patch:
      operationId: addresses_partial_update
      description: Partially update an address information
      parameters:
      - in: path
        name: address
        schema:
          type: string
        required: true
      tags:
      - addresses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAddress'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAddress'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
    delete:
      operationId: addresses_destroy
      description: Delete the address provided
      parameters:
      - in: path
        name: address
        schema:
          type: string
        required: true
      tags:
      - addresses
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /addresses/{address}/reset_sync_status/:
    post:
      operationId: addresses_reset_sync_status_create
      description: Address Model view set
      parameters:
      - in: path
        name: address
        schema:
          type: string
        required: true
      tags:
      - addresses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Address'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Address'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
  /addresses/{address}/sync_transactions/:
    post:
      operationId: addresses_sync_transactions_create
      description: Address Model view set
      parameters:
      - in: path
        name: address
        schema:
          type: string
        required: true
      tags:
      - addresses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Address'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Address'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
  /transactions/:
    get:
      operationId: transactions_list
      description: List all addresses
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - transactions
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTransactionList'
          description: ''
    post:
      operationId: transactions_create
      description: Transaction Model view set
      tags:
      - transactions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Transaction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Transaction'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
  /transactions/{address}/:
    get:
      operationId: transactions_retrieve
      description: Transaction Model view set
      parameters:
      - in: path
        name: address
        schema:
          type: integer
        required: true
      tags:
      - transactions
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
    put:
      operationId: transactions_update
      description: Transaction Model view set
      parameters:
      - in: path
        name: address
        schema:
          type: integer
        required: true
      tags:
      - transactions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Transaction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Transaction'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
    patch:
      operationId: transactions_partial_update
      description: Transaction Model view set
      parameters:
      - in: path
        name: address
        schema:
          type: integer
        required: true
      tags:
      - transactions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTransaction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTransaction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTransaction'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
    delete:
      operationId: transactions_destroy
      description: Transaction Model view set
      parameters:
      - in: path
        name: address
        schema:
          type: integer
        required: true
      tags:
      - transactions
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Address:
      type: object
      description: Serializer for Address model
      properties:
        id:
          type: integer
          readOnly: true
        address:
          type: string
          maxLength: 160
        transaction_count:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        final_balance:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        last_successfull_sync:
          type: string
          format: date-time
          nullable: true
        sync_status:
          $ref: '#/components/schemas/SyncStatusEnum'
        user:
          type: integer
      required:
      - address
      - id
      - user
    PaginatedTransactionList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
    PatchedAddress:
      type: object
      description: Serializer for Address model
      properties:
        id:
          type: integer
          readOnly: true
        address:
          type: string
          maxLength: 160
        transaction_count:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        final_balance:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        last_successfull_sync:
          type: string
          format: date-time
          nullable: true
        sync_status:
          $ref: '#/components/schemas/SyncStatusEnum'
        user:
          type: integer
    PatchedTransaction:
      type: object
      description: Serializer for Transaction model
      properties:
        id:
          type: integer
          readOnly: true
        hash:
          type: string
          maxLength: 255
        inputs:
          type: object
          additionalProperties: {}
        out:
          type: object
          additionalProperties: {}
        fee:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        date:
          type: string
          format: date-time
        address:
          type: integer
    SyncStatusEnum:
      enum:
      - NEVER
      - SCHEDULED
      - STARTED
      - FAILED
      - COMPLETED
      type: string
    Transaction:
      type: object
      description: Serializer for Transaction model
      properties:
        id:
          type: integer
          readOnly: true
        hash:
          type: string
          maxLength: 255
        inputs:
          type: object
          additionalProperties: {}
        out:
          type: object
          additionalProperties: {}
        fee:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        date:
          type: string
          format: date-time
        address:
          type: integer
      required:
      - address
      - date
      - fee
      - hash
      - id
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
